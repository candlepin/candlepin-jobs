apply plugin: 'groovy'

sourceSets {
  jobs {
    groovy {
      srcDirs 'src/jobs'
      compileClasspath += main.compileClasspath
    }
    compileClasspath += sourceSets.main.output
    runtimeClasspath += sourceSets.main.output
  }
}

repositories {
  mavenCentral()
  maven { url 'http://repo.jenkins-ci.org/releases/' }
  jcenter()
}

configurations {
  testPlugins {}
}

// Exclude buggy Xalan dependency this way the JRE default TransformerFactory is used
// The xalan pulled in by htmlunit does not properly deal with spaces folder / job names
configurations.all*.exclude group: 'xalan'

dependencies {
  compile 'org.codehaus.groovy:groovy-all:2.4.11'
  compile "org.jenkins-ci.plugins:job-dsl-core:${jobDslVersion}"

  // for the rest task
  compile('org.codehaus.groovy.modules.http-builder:http-builder:0.7.2') {
    exclude(module: 'groovy')
  }
  compile('org.apache.ant:ant:1.9.7')

  testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
  testCompile 'cglib:cglib-nodep:2.2.2' // used by Spock

  // Jenkins test harness dependencies
  testCompile('org.jenkins-ci.main:jenkins-test-harness:2.33') {
    exclude group: 'org.netbeans.modules', module: 'org-netbeans-insane'
    // https://github.com/sheehan/job-dsl-gradle-example/issues/90
  }
  testCompile("org.jenkins-ci.main:jenkins-war:${jenkinsVersion}") {
    exclude group: 'org.jenkins-ci.ui', module: 'bootstrap'
    // https://github.com/sheehan/job-dsl-gradle-example/issues/87
  }

  // Job DSL plugin including plugin dependencies
  testCompile "org.jenkins-ci.plugins:job-dsl:${jobDslVersion}"
  testCompile "org.jenkins-ci.plugins:job-dsl:${jobDslVersion}@jar"
  testCompile 'org.jenkins-ci.plugins:structs:1.14@jar'
  testCompile 'org.jenkins-ci.plugins:cloudbees-folder:6.5.1@jar'
  testCompile 'org.jenkins-ci.plugins:script-security:1.44@jar'
  testCompile 'org.jenkins-ci.plugins:ansible:1.0@jar'
  testCompile 'org.jenkins-ci.plugins:credentials:2.1.18@jar'
  testCompile 'org.jvnet.hudson.plugins:ircbot:2.30@jar'
  testCompile 'org.jenkins-ci.plugins:ghprb:1.42.0@jar'
  testCompile 'org.jenkins-ci.plugins:config-file-provider:2.18@jar'
  testCompile 'org.jvnet.hudson.plugins:instant-messaging:1.35@jar'
  testCompile group: 'org.jenkins-ci.plugins.workflow', name: 'workflow-aggregator', version: '2.5'
  testCompile group: 'org.kohsuke', name: 'github-api', version: '1.95'

  // plugins to install in test instance
  testPlugins 'org.jenkins-ci.plugins:ghprb:1.42.0@jar'
  testPlugins 'com.coravy.hudson.plugins.github:github:1.29.2@jar'
  testPlugins 'org.jenkins-ci.plugins:cloudbees-folder:6.5.1@jar'
  testPlugins 'org.jenkins-ci.plugins:credentials:2.1.18@jar'
  testPlugins 'org.jenkins-ci.plugins:ansicolor:0.5.2'
  testPlugins 'org.jvnet.hudson.plugins:ircbot:2.30'
  testPlugins 'org.jenkins-ci.plugins:htmlpublisher:1.16'
  testPlugins 'org.jenkins-ci.plugins:ws-cleanup:0.36'
  testPlugins 'org.jenkins-ci.plugins:email-ext:2.63'
  testPlugins 'org.jvnet.hudson.plugins:instant-messaging:1.35'
  testPlugins 'com.cloudbees.jenkins.plugins:cloudbees-credentials:3.3'

  testPlugins group: 'org.jenkins-ci.plugins.workflow', name: 'workflow-aggregator', version: '2.5'

  // plugins used for auto-generated DSL.
  testPlugins 'org.jenkins-ci.plugins:cvs:2.13'
  testPlugins 'org.jenkins-ci.plugins.workflow:workflow-cps-global-lib:2.7'

  // for the RestApiScriptRunner
  compile('org.codehaus.groovy.modules.http-builder:http-builder:0.7.2') {
    exclude(module: 'groovy')
  }

  // for the RestApiScriptRunner and XmlOutputRunner
  compile('org.apache.ant:ant:1.9.7')
}

task resolveTestPlugins(type: Copy) {
  from configurations.testPlugins
  into new File(sourceSets.test.output.resourcesDir, 'test-dependencies')
  include '*.hpi'
  include '*.jpi'
  def mapping = [:]

  doFirst {
    configurations.testPlugins.resolvedConfiguration.resolvedArtifacts.each {
      mapping[it.file.name] = "${it.name}.${it.extension}"
    }
  }
  rename { mapping[it] }

  doLast {
    List<String> baseNames = source*.name.collect { mapping[it] }.collect { it[0..it.lastIndexOf('.') - 1] }
    new File(destinationDir, 'index').setText(baseNames.join('\n'), 'UTF-8')
  }
}

test {
  dependsOn tasks.resolveTestPlugins
  inputs.files sourceSets.jobs.groovy.srcDirs

  // set build directory for Jenkins test harness, JENKINS-26331
  systemProperty 'buildDirectory', project.buildDir.absolutePath
}

task rest(dependsOn: 'classes', type: JavaExec) {
  main = 'com.dslexample.rest.RestApiScriptRunner'
  classpath = sourceSets.main.runtimeClasspath
  systemProperties System.getProperties()
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.9'
}
